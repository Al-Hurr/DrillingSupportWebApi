// <auto-generated />
using System;
using DrillingSupportWebApi.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DrillingSupportWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230408224153_add_DrillBlock_navigate")]
    partial class add_DrillBlock_navigate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DrillingSupportWebApi.Domain.DrillBlockPointss.Entity.DrillBlockPoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DrillBlockId")
                        .HasColumnType("integer");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<double?>("X")
                        .HasColumnType("double precision");

                    b.Property<double?>("Y")
                        .HasColumnType("double precision");

                    b.Property<double?>("Z")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DrillBlockId");

                    b.ToTable("DrillBlockPoints");
                });

            modelBuilder.Entity("DrillingSupportWebApi.Domain.DrillBlocks.Entity.DrillBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("DrillBlocks");
                });

            modelBuilder.Entity("DrillingSupportWebApi.Domain.HolePointss.Entity.HolePoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("HoleId")
                        .HasColumnType("integer");

                    b.Property<double?>("X")
                        .HasColumnType("double precision");

                    b.Property<double?>("Y")
                        .HasColumnType("double precision");

                    b.Property<double?>("Z")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("HolePoints");
                });

            modelBuilder.Entity("DrillingSupportWebApi.Domain.Holes.Entity.Hole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("DEPTH")
                        .HasColumnType("double precision");

                    b.Property<int?>("DrillBlockId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Holes");
                });

            modelBuilder.Entity("DrillingSupportWebApi.Domain.DrillBlockPointss.Entity.DrillBlockPoints", b =>
                {
                    b.HasOne("DrillingSupportWebApi.Domain.DrillBlocks.Entity.DrillBlock", "DrillBlock")
                        .WithMany()
                        .HasForeignKey("DrillBlockId");

                    b.Navigation("DrillBlock");
                });
#pragma warning restore 612, 618
        }
    }
}
